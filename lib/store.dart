import 'package:eudcc/eudcc.dart';
import 'package:localstorage/localstorage.dart';
import 'package:myqrwallet/controller.dart';
import 'package:myqrwallet/plugins/eudcc/qrcode.dart';

class TempStore extends Store {
  @override
  Future<bool> get ready async {
    await load();
    return true;
  }

  @override
  Future<void> save() async {}

  @override
  Future<void> load() async {
    certs.clear();
    certs.add(EUDCCQrCode.fromQrCode(

    certs.add(EUDCCQrCode.fromQrCode(

    certs.add(EUDCCQrCode.fromQrCode(
        "HC1:NCF 50.G0/3WUWGSLKH47GO0Y%5S.PK%96L78CKR7U*70YM8FN0GWC MCWY0/AC9%VD97TK0F90GECQHGWJC0FDL:4:KEPH7M/ESDD746KG7+59V*8H:6TL6657-R8RM8AL6W*8SX8457UW6QW6WJCT3EYM8XJCS.CNF6OF63W59%6%96XJC/\$ENF6OF64W5Y96UF6ZJC+KENF6OF63W59%6746%JC+QE\$.32%E6VCHQEU\$DE44NXOBJE719\$QE0/D+8D-ED.24-G8\$:84KCD3DX47B46IL6646I*6GVC*JC1A6G%63W56L6-96TPCBEC7ZKW.CI C14EPQE JC2/DB190%EMEDLPCG/DI CC1A NAMPCG/D%-C8C9:S9:B8O/EZKEZ967L6256V50N:HS3M*AUM.0R:3O Q-RBKL9PGCK+J1KV9W9KRB1:827NW0E5/0Q HL*M VI END26KPA-/NBSBXX1NCCKHN7+23478K5I9L.-72U06SJ/89PT9OGM1/0CZUU4JYNM/O39LK3.N1JQHU7+Z3SOP0/A3JUTKPVC73UTM%ECV1+CQSUT--8EJH4ZOM-N\$*SOC3-NB2GJJ-69YL 59V3G\$ 4%Y4Z6R.9PFWGP\$TGWHHK61N757O JJS 58DJ69984MEA41YGTXAB.CTPG-+RDHLVQBEWPFVK%L90+JCW1F30PL7ZOQ% QCRRPYJXYAA.M.*D HJ H985E\$4QA915SJEPQZ*J.6HATCDF16IARXM3FG0QE2N2C%7E%FXADONSY*R7S33IQ")!);
  }
}

class LocalStore extends Store {
  final String name;
  late LocalStorage storage;

  LocalStore(this.name) : super();

  @override
  Future<bool> get ready async {
    storage = LocalStorage(name);
    if (await storage.ready) {
      await load();
      return true;
    }
    return false;
  }

  @override
  Future<void> save() async {
    var persist = certs.map((QrCode cert) {
      return cert.toQrCode();
    }).toList();
    return storage.setItem("list", persist);
  }

  @override
  Future<void> load() async {
    var persist = await storage.getItem("list");
    if (persist == null) {
      await save();
      return;
    }
    certs.clear();
    persist.forEach((qr) {
      if (qr is String) {
        certs.add(EUDCCQrCode.fromQrCode(qr)!);
      }
    });
  }
}

abstract class Store {
  List<QrCode> certs = [];

  Store();

  Future<bool> get ready;

  Future<void> save();

  Future<void> load();

  int get length {
    return certs.length;
  }

  Future<bool> add(QrCode qr) async {
    certs.add(qr);
    await save();
    return true;
  }

  Future<bool> remove(QrCode qr) async {
    var done = certs.remove(qr);
    if (done) {
      await save();
      return true;
    }
    return false;
  }
}
